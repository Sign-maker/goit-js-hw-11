{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,qEAOA,MAAMC,EAAUC,SAASC,cAAc,gBACjCC,EAAkBF,SAASC,cAAc,kBACzCE,EAAYH,SAASC,cAAc,YACnCG,EAAYJ,SAASC,cAAc,WAEzCI,EAAAR,GAASS,OAAOC,KAAK,CACnBC,SAAU,OACVC,QAAS,MAGX,MAAMC,EAAa,IAAI,EAAAC,EAAAC,YAEjBC,EAAe,IAAI,EAAAC,EAAAC,QAAOb,EAAiB,MAE3Cc,EAAW,IAAIC,eAAe,aAAc,IAElDJ,EAAaK,OAEbnB,EAAQoB,iBAAiB,UAWzBC,eAA4BC,GAC1BA,EAAIC,iBAEJ,MAAMC,EAAcF,EAAIG,OAAOC,SAASF,YAAYG,MAAMC,OAC1D,IAAKJ,EAEH,YADAlB,EAAAR,GAASS,OAAOsB,QAAQ,6BAG1BlB,EAAWmB,OAAOC,KAAO,EAwGzB3B,EAAU4B,UAAY,GApGtBrB,EAAWmB,OAAS,IAAKnB,EAAWmB,OAAQG,EAAGT,GAE/C,IACEF,EAAIG,OAAOS,iBAAiBC,UAAW,EACvCrB,EAAasB,OAEb,MAAMC,QAAa1B,EAAW2B,WACxBC,EAAQF,EAAKG,UAEnB,IAAKD,EAKH,YAJAjC,EAAAR,GAASS,OAAOkC,QACd,4EAMJnC,EAAAR,GAASS,OAAOmC,QAAQ,GAAGH,UAAwB,IAAVA,EAAc,GAAK,cAE5D5B,EAAWgC,WAAaC,KAAKC,KAAKN,EAAQ5B,EAAWmB,OAAOgB,UAE5DC,EAAaV,EAAKW,MAClB/B,EAASgC,UAELC,KACFvC,EAAWmB,OAAOC,MAAQ,EAC1BoB,EAASC,QAAQ/C,IAEjBC,EAAAR,GAASS,OAAOmC,QACd,6D,CAEJ,MAAOW,GACPC,QAAQC,IAAIF,GACZ/C,EAAAR,GAASS,OAAOkC,QAAQ,yC,CACzB,QACC3B,EAAaK,OACbG,EAAIG,OAAOS,iBAAiBC,UAAW,C,KAzD3C,IAKIgB,EAAW,IAAIK,sBAwDnB,SAAyBC,EAASC,GAChCD,EAAQE,SAAQtC,MAAMuC,IACpB,GAAKA,EAAMC,eAAX,CAGAP,QAAQC,IAAIK,GACZ,IAGEb,SAFmBpC,EAAW2B,YAEZU,MAClB/B,EAASgC,UAELC,IACFvC,EAAWmB,OAAOC,MAAQ,GAE1BzB,EAAAR,GAASS,OAAOmC,QACd,8DAEFgB,EAASI,UAAUzD,G,CAErB,MAAOgD,GACPC,QAAQC,IAAIF,GACZ/C,EAAAR,GAASS,OAAOkC,QAAQ,yC,CAnBxB,C,MAhEQ,CACZsB,WAAY,QACZC,UAAW,IAqFb,SAASd,IACP,OAAOvC,EAAWgC,WAAahC,EAAWmB,OAAOC,I,CAGnD,SAASkC,EAAaC,GACpB,MAAMC,aACJA,EAAYC,cACZA,EAAaC,MACbA,EAAKC,MACLA,EAAKC,SACLA,EAAQC,UACRA,EAASC,KACTA,GACEP,EACJ,MAAO,4CACQE,gBAA4BD,WAAsBM,4GAG3CJ,yEAGAC,4EAGGC,6EAGCC,2C,CAU5B,SAASzB,EAAa2B,GACpB,MAAMC,EAASD,EAAME,IAAIX,GAAcY,KAAK,IAC5CzE,EAAU0E,mBAAmB,YAAaH,E,EAvH5C,EAAAI,EAAAC","sources":["src/js/version-infscroll.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport simpleLightbox from 'simplelightbox';\nimport { PixabayAPI } from './modules/pixabay-api';\nimport { Button } from './modules/load-more-btn';\nimport { Loader } from './modules/loader';\nimport { goTopBtnHandler } from './modules/go-top-btn';\n\nconst formRef = document.querySelector('#search-form');\nconst searchLoaderRef = document.querySelector('.search-loader');\nconst renderRef = document.querySelector('.gallery');\nconst targetRef = document.querySelector('.target');\n\nNotiflix.Notify.init({\n  fontSize: '16px',\n  timeout: 5000,\n});\n\nconst pixabayApi = new PixabayAPI();\n\nconst searchLoader = new Loader(searchLoaderRef, '🔍');\n\nconst lightbox = new SimpleLightbox('.gallery a', {});\n\nsearchLoader.hide();\n\nformRef.addEventListener('submit', onFormSubmit);\n// loadMoreBtnRef.addEventListener('click', onLoadMoreClick);\nlet options = {\n  rootMargin: '200px',\n  threshold: 1.0,\n};\n\nlet observer = new IntersectionObserver(handleIntersect, options);\n\ngoTopBtnHandler();\n\nasync function onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const searchQuery = evt.target.elements.searchQuery.value.trim();\n  if (!searchQuery) {\n    Notiflix.Notify.warning('Plase input search query!');\n    return;\n  }\n  pixabayApi.params.page = 1;\n\n  clearRender();\n\n  pixabayApi.params = { ...pixabayApi.params, q: searchQuery };\n\n  try {\n    evt.target.lastElementChild.disabled = true;\n    searchLoader.show();\n\n    const data = await pixabayApi.getCards();\n    const total = data.totalHits;\n\n    if (!total) {\n      Notiflix.Notify.failure(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n\n      return;\n    }\n\n    Notiflix.Notify.success(`${total} image${total === 1 ? '' : 's'} finded`);\n\n    pixabayApi.totalPages = Math.ceil(total / pixabayApi.params.per_page);\n\n    renderMarkup(data.hits);\n    lightbox.refresh();\n\n    if (isNextPage()) {\n      pixabayApi.params.page += 1;\n      observer.observe(targetRef);\n    } else\n      Notiflix.Notify.success(\n        \"We're sorry, but you've reached the end of search results.\"\n      );\n  } catch (error) {\n    console.log(error);\n    Notiflix.Notify.failure('Oops, something went wrong, try again!');\n  } finally {\n    searchLoader.hide();\n    evt.target.lastElementChild.disabled = false;\n  }\n}\n\nfunction handleIntersect(entries, observer) {\n  entries.forEach(async entry => {\n    if (!entry.isIntersecting) {\n      return;\n    }\n    console.log(entry);\n    try {\n      const data = await pixabayApi.getCards();\n\n      renderMarkup(data.hits);\n      lightbox.refresh();\n\n      if (isNextPage()) {\n        pixabayApi.params.page += 1;\n      } else {\n        Notiflix.Notify.success(\n          \"We're sorry, but you've reached the end of search results.\"\n        );\n        observer.unobserve(targetRef);\n      }\n    } catch (error) {\n      console.log(error);\n      Notiflix.Notify.failure('Oops, something went wrong, try again!');\n    }\n  });\n}\nfunction isNextPage() {\n  return pixabayApi.totalPages > pixabayApi.params.page;\n}\n\nfunction cardTemplate(card) {\n  const {\n    webformatURL,\n    largeImageURL,\n    likes,\n    views,\n    comments,\n    downloads,\n    tags,\n  } = card;\n  return `<div class=\"photo-card\">\n      <a href=\"${largeImageURL}\"><img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" /></a>\n      <div class=\"info\">\n        <p class=\"info-item\">\n          <b>Likes</b>${likes}\n        </p>\n        <p class=\"info-item\">\n          <b>Views</b>${views}\n        </p>\n        <p class=\"info-item\">\n          <b>Comments</b>${comments}\n        </p>\n        <p class=\"info-item\">\n          <b>Downloads</b>${downloads}\n        </p>\n      </div>\n    </div>`;\n}\n\nfunction clearRender() {\n  renderRef.innerHTML = '';\n}\n\nfunction renderMarkup(cards) {\n  const markup = cards.map(cardTemplate).join('');\n  renderRef.insertAdjacentHTML('beforeend', markup);\n}\n"],"names":["$7Y9D8","parcelRequire","$fa28b284c05e71dc$var$formRef","document","querySelector","$fa28b284c05e71dc$var$searchLoaderRef","$fa28b284c05e71dc$var$renderRef","$fa28b284c05e71dc$var$targetRef","$parcel$interopDefault","Notify","init","fontSize","timeout","$fa28b284c05e71dc$var$pixabayApi","$g9nP5","PixabayAPI","$fa28b284c05e71dc$var$searchLoader","$irItn","Loader","$fa28b284c05e71dc$var$lightbox","SimpleLightbox","hide","addEventListener","async","evt","preventDefault","searchQuery","target","elements","value","trim","warning","params","page","innerHTML","q","lastElementChild","disabled","show","data","getCards","total","totalHits","failure","success","totalPages","Math","ceil","per_page","$fa28b284c05e71dc$var$renderMarkup","hits","refresh","$fa28b284c05e71dc$var$isNextPage","$fa28b284c05e71dc$var$observer","observe","error","console","log","IntersectionObserver","entries","observer1","forEach","entry","isIntersecting","unobserve","rootMargin","threshold","$fa28b284c05e71dc$var$cardTemplate","card","webformatURL","largeImageURL","likes","views","comments","downloads","tags","cards","markup","map","join","insertAdjacentHTML","$6HtdS","goTopBtnHandler"],"version":3,"file":"version-infscroll.e4356722.js.map"}