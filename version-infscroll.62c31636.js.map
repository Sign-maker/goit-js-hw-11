{"mappings":"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","sources":["src/js/version-infscroll.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport simpleLightbox from 'simplelightbox';\nimport { PixabayAPI } from './modules/pixabay-api';\nimport { Button } from './modules/load-more-btn';\nimport { Loader } from './modules/loader';\nimport { goTopBtnHandler } from './modules/go-top-btn';\n\nconst formRef = document.querySelector('#search-form');\nconst searchLoaderRef = document.querySelector('.search-loader');\nconst renderRef = document.querySelector('.gallery');\nconst targetRef = document.querySelector('.target');\n\nNotiflix.Notify.init({\n  fontSize: '16px',\n  timeout: 5000,\n});\n\nconst pixabayApi = new PixabayAPI();\n\nconst searchLoader = new Loader(searchLoaderRef, '🔍');\n\nconst lightbox = new SimpleLightbox('.gallery a', {});\n\nsearchLoader.hide();\n\nformRef.addEventListener('submit', onFormSubmit);\n// loadMoreBtnRef.addEventListener('click', onLoadMoreClick);\nlet options = {\n  rootMargin: '200px',\n  threshold: 1.0,\n};\n\nlet observer = new IntersectionObserver(handleIntersect, options);\n\ngoTopBtnHandler();\n\nasync function onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const searchQuery = evt.target.elements.searchQuery.value.trim();\n  if (!searchQuery) {\n    Notiflix.Notify.warning('Plase input search query!');\n    return;\n  }\n  pixabayApi.params.page = 1;\n\n  clearRender();\n\n  pixabayApi.params = { ...pixabayApi.params, q: searchQuery };\n\n  try {\n    evt.target.lastElementChild.disabled = true;\n    searchLoader.show();\n\n    const data = await pixabayApi.getCards();\n    const total = data.totalHits;\n\n    if (!total) {\n      Notiflix.Notify.failure(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n\n      return;\n    }\n\n    Notiflix.Notify.success(`${total} image${total === 1 ? '' : 's'} finded`);\n\n    pixabayApi.totalPages = Math.ceil(total / pixabayApi.params.per_page);\n\n    renderMarkup(data.hits);\n    lightbox.refresh();\n\n    if (isNextPage()) {\n      pixabayApi.params.page += 1;\n      observer.observe(targetRef);\n    } else\n      Notiflix.Notify.success(\n        \"We're sorry, but you've reached the end of search results.\"\n      );\n  } catch (error) {\n    console.log(error);\n    Notiflix.Notify.failure('Oops, something went wrong, try again!');\n  } finally {\n    searchLoader.hide();\n    evt.target.lastElementChild.disabled = false;\n  }\n}\n\nfunction handleIntersect(entries, observer) {\n  entries.forEach(async entry => {\n    if (!entry.isIntersecting) {\n      return;\n    }\n    console.log(entry);\n    try {\n      const data = await pixabayApi.getCards();\n\n      renderMarkup(data.hits);\n      lightbox.refresh();\n\n      if (isNextPage()) {\n        pixabayApi.params.page += 1;\n      } else {\n        Notiflix.Notify.success(\n          \"We're sorry, but you've reached the end of search results.\"\n        );\n        observer.unobserve(targetRef);\n      }\n    } catch (error) {\n      console.log(error);\n      Notiflix.Notify.failure('Oops, something went wrong, try again!');\n    }\n  });\n}\nfunction isNextPage() {\n  return pixabayApi.totalPages > pixabayApi.params.page;\n}\n\nfunction cardTemplate(card) {\n  const {\n    webformatURL,\n    largeImageURL,\n    likes,\n    views,\n    comments,\n    downloads,\n    tags,\n  } = card;\n  return `<div class=\"photo-card\">\n      <a href=\"${largeImageURL}\"><img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" /></a>\n      <div class=\"info\">\n        <p class=\"info-item\">\n          <b>Likes</b>${likes}\n        </p>\n        <p class=\"info-item\">\n          <b>Views</b>${views}\n        </p>\n        <p class=\"info-item\">\n          <b>Comments</b>${comments}\n        </p>\n        <p class=\"info-item\">\n          <b>Downloads</b>${downloads}\n        </p>\n      </div>\n    </div>`;\n}\n\nfunction clearRender() {\n  renderRef.innerHTML = '';\n}\n\nfunction renderMarkup(cards) {\n  const markup = cards.map(cardTemplate).join('');\n  renderRef.insertAdjacentHTML('beforeend', markup);\n}\n"],"names":["$bpxeT","parcelRequire","$f96cf9be961856a8$var$formRef","document","querySelector","$f96cf9be961856a8$var$searchLoaderRef","$f96cf9be961856a8$var$renderRef","$f96cf9be961856a8$var$targetRef","$parcel$interopDefault","$6JpON","Notify","init","fontSize","timeout","$f96cf9be961856a8$var$pixabayApi","$kZWxX","PixabayAPI","$f96cf9be961856a8$var$searchLoader","$ip97o","Loader","$f96cf9be961856a8$var$lightbox","SimpleLightbox","hide","addEventListener","evt","$f96cf9be961856a8$var$_onFormSubmit","apply","this","arguments","$f96cf9be961856a8$var$observer","IntersectionObserver","entries","observer1","forEach","$2TvXO","mark","_callee","entry","isIntersecting","console","log","getCards","$f96cf9be961856a8$var$renderMarkup","_ctx","sent","hits","refresh","$f96cf9be961856a8$var$isNextPage","params","page","success","unobserve","t0","failure","rootMargin","threshold","searchQuery","data","total","preventDefault","target","elements","value","trim","warning","$f96cf9be961856a8$var$clearRender","$dDDEV","q","lastElementChild","disabled","show","totalHits","concat","totalPages","Math","ceil","per_page","observe","$f96cf9be961856a8$var$cardTemplate","card","webformatURL","largeImageURL","likes","views","comments","downloads","tags","innerHTML","cards","markup","map","join","insertAdjacentHTML","$gx7bW","goTopBtnHandler"],"version":3,"file":"version-infscroll.62c31636.js.map"}