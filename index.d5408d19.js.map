{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,mEAOA,MAAMC,EAAUC,SAASC,cAAc,gBACjCC,EAAiBF,SAASC,cAAc,kBACxCE,EAAkBH,SAASC,cAAc,kBACzCG,EAAoBJ,SAASC,cAAc,qBAC3CI,EAAYL,SAASC,cAAc,YAEzCK,EAAAT,GAASU,OAAOC,KAAK,CACnBC,SAAU,OACVC,QAAS,MAGX,MAAMC,EAAa,IAAI,EAAAC,EAAAC,YACjBC,EAAc,IAAI,EAAAC,EAAAC,QAAOd,GACzBe,EAAe,IAAI,EAAAC,EAAAC,QAAOhB,EAAiB,MAC3CiB,EAAiB,IAAI,EAAAF,EAAAC,QAAOf,EAAmB,OAC/CiB,EAAW,IAAIC,eAAe,aAAc,IA2FlD,SAASC,IACP,OAAOZ,EAAWa,WAAab,EAAWc,OAAOC,I,CAGnD,SAASC,EAAaC,GACpB,MAAMC,aACJA,EAAYC,cACZA,EAAaC,MACbA,EAAKC,MACLA,EAAKC,SACLA,EAAQC,UACRA,EAASC,KACTA,GACEP,EACJ,MAAO,4CACQE,gBAA4BD,WAAsBM,4GAG3CJ,yEAGAC,4EAGGC,6EAGCC,2C,CAU5B,SAASE,EAAaC,GACpB,MAAMC,EAASD,EAAME,IAAIZ,GAAca,KAAK,IAC5CnC,EAAUoC,mBAAmB,YAAaH,E,CAhI5CrB,EAAayB,OACb5B,EAAY4B,OACZ5B,EAAY6B,UACZvB,EAAesB,OAEf3C,EAAQ6C,iBAAiB,UAIzBC,eAA4BC,GAC1BA,EAAIC,iBAEJ,MAAMC,EAAcF,EAAIG,OAAOC,SAASF,YAAYG,MAAMC,OAC1D,IAAKJ,EAEH,YADA1C,EAAAT,GAASU,OAAO8C,QAAQ,6BAG1B1C,EAAWc,OAAOC,KAAO,OA0GzBrB,EAAUiD,UAAY,IAvGlBxC,EAAYyC,WACdzC,EAAY4B,OAEd/B,EAAWc,OAAS,IAAKd,EAAWc,OAAQ+B,EAAGR,GAE/C,IACEF,EAAIG,OAAOQ,iBAAiBC,UAAW,EACvCzC,EAAa0C,OAEb,MAAMC,QAAajD,EAAWkD,WACxBC,EAAQF,EAAKG,UAEnB,IAAKD,EAKH,YAJAxD,EAAAT,GAASU,OAAOyD,QACd,4EAMJ1D,EAAAT,GAASU,OAAO0D,QAAQ,GAAGH,UAAwB,IAAVA,EAAc,GAAK,cAE5DnD,EAAWa,WAAa0C,KAAKC,KAAKL,EAAQnD,EAAWc,OAAO2C,UAC5DhC,EAAawB,EAAKS,MAClBhD,EAASiD,UAEL/C,KACFZ,EAAWc,OAAOC,MAAQ,EAC1BZ,EAAY6C,OACZ7C,EAAYyD,UAEZjE,EAAAT,GAASU,OAAO0D,QACd,6D,CAEJ,MAAOO,GACPC,QAAQC,IAAIF,GACZlE,EAAAT,GAASU,OAAOyD,QAAQ,yC,CACzB,QACC/C,EAAayB,OACbI,EAAIG,OAAOQ,iBAAiBC,UAAW,C,KArD3CxD,EAAe0C,iBAAiB,SAyDhCC,iBACE,IACE/B,EAAY6B,UACZvB,EAAeuC,OAGfvB,SAFmBzB,EAAWkD,YAEZQ,MA8DtB,WACE,MAAQM,OAAQC,GACdvE,EAAUwE,kBAAkBC,wBAE9BC,OAAOC,SAAS,CACdC,IAAkB,EAAbL,EACLM,SAAU,U,CAnEVC,GACA9D,EAASiD,UACTxD,EAAYyD,SAERhD,IACFZ,EAAWc,OAAOC,MAAQ,GAE1BpB,EAAAT,GAASU,OAAO0D,QACd,8DAEFnD,EAAY4B,O,CAEd,MAAO8B,GACPC,QAAQC,IAAIF,GACZlE,EAAAT,GAASU,OAAOyD,QAAQ,yC,CACzB,QACC5C,EAAesB,M,MA/EnB,EAAA0C,EAAAC","sources":["src/js/index.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport simpleLightbox from 'simplelightbox';\nimport { PixabayAPI } from './modules/pixabay-api';\nimport { Button } from './modules/load-more-btn';\nimport { Loader } from './modules/loader';\nimport { goTopBtnHandler } from './modules/go-top-btn';\n\nconst formRef = document.querySelector('#search-form');\nconst loadMoreBtnRef = document.querySelector('.load-more-btn');\nconst searchLoaderRef = document.querySelector('.search-loader');\nconst loadMoreLoaderRef = document.querySelector('.load-more-loader');\nconst renderRef = document.querySelector('.gallery');\n\nNotiflix.Notify.init({\n  fontSize: '16px',\n  timeout: 5000,\n});\n\nconst pixabayApi = new PixabayAPI();\nconst loadMoreBtn = new Button(loadMoreBtnRef);\nconst searchLoader = new Loader(searchLoaderRef, '🔍');\nconst loadMoreLoader = new Loader(loadMoreLoaderRef, '🎞️');\nconst lightbox = new SimpleLightbox('.gallery a', {});\n\nsearchLoader.hide();\nloadMoreBtn.hide();\nloadMoreBtn.disable();\nloadMoreLoader.hide();\n\nformRef.addEventListener('submit', onFormSubmit);\nloadMoreBtnRef.addEventListener('click', onLoadMoreClick);\ngoTopBtnHandler();\n\nasync function onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const searchQuery = evt.target.elements.searchQuery.value.trim();\n  if (!searchQuery) {\n    Notiflix.Notify.warning('Plase input search query!');\n    return;\n  }\n  pixabayApi.params.page = 1;\n\n  clearRender();\n  if (loadMoreBtn.isVisible) {\n    loadMoreBtn.hide();\n  }\n  pixabayApi.params = { ...pixabayApi.params, q: searchQuery };\n\n  try {\n    evt.target.lastElementChild.disabled = true;\n    searchLoader.show();\n\n    const data = await pixabayApi.getCards();\n    const total = data.totalHits;\n\n    if (!total) {\n      Notiflix.Notify.failure(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n\n      return;\n    }\n\n    Notiflix.Notify.success(`${total} image${total === 1 ? '' : 's'} finded`);\n\n    pixabayApi.totalPages = Math.ceil(total / pixabayApi.params.per_page);\n    renderMarkup(data.hits);\n    lightbox.refresh();\n\n    if (isNextPage()) {\n      pixabayApi.params.page += 1;\n      loadMoreBtn.show();\n      loadMoreBtn.enable();\n    } else\n      Notiflix.Notify.success(\n        \"We're sorry, but you've reached the end of search results.\"\n      );\n  } catch (error) {\n    console.log(error);\n    Notiflix.Notify.failure('Oops, something went wrong, try again!');\n  } finally {\n    searchLoader.hide();\n    evt.target.lastElementChild.disabled = false;\n  }\n}\n\nasync function onLoadMoreClick() {\n  try {\n    loadMoreBtn.disable();\n    loadMoreLoader.show();\n    const data = await pixabayApi.getCards();\n\n    renderMarkup(data.hits);\n    scrollCards();\n    lightbox.refresh();\n    loadMoreBtn.enable();\n\n    if (isNextPage()) {\n      pixabayApi.params.page += 1;\n    } else {\n      Notiflix.Notify.success(\n        \"We're sorry, but you've reached the end of search results.\"\n      );\n      loadMoreBtn.hide();\n    }\n  } catch (error) {\n    console.log(error);\n    Notiflix.Notify.failure('Oops, something went wrong, try again!');\n  } finally {\n    loadMoreLoader.hide();\n  }\n}\nfunction isNextPage() {\n  return pixabayApi.totalPages > pixabayApi.params.page;\n}\n\nfunction cardTemplate(card) {\n  const {\n    webformatURL,\n    largeImageURL,\n    likes,\n    views,\n    comments,\n    downloads,\n    tags,\n  } = card;\n  return `<div class=\"photo-card\">\n      <a href=\"${largeImageURL}\"><img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" /></a>\n      <div class=\"info\">\n        <p class=\"info-item\">\n          <b>Likes</b>${likes}\n        </p>\n        <p class=\"info-item\">\n          <b>Views</b>${views}\n        </p>\n        <p class=\"info-item\">\n          <b>Comments</b>${comments}\n        </p>\n        <p class=\"info-item\">\n          <b>Downloads</b>${downloads}\n        </p>\n      </div>\n    </div>`;\n}\n\nfunction clearRender() {\n  renderRef.innerHTML = '';\n}\n\nfunction renderMarkup(cards) {\n  const markup = cards.map(cardTemplate).join('');\n  renderRef.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction scrollCards() {\n  const { height: cardHeight } =\n    renderRef.firstElementChild.getBoundingClientRect();\n\n  window.scrollBy({\n    top: cardHeight * 2,\n    behavior: 'smooth',\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$85a5f86b715fe7db$var$formRef","document","querySelector","$85a5f86b715fe7db$var$loadMoreBtnRef","$85a5f86b715fe7db$var$searchLoaderRef","$85a5f86b715fe7db$var$loadMoreLoaderRef","$85a5f86b715fe7db$var$renderRef","$parcel$interopDefault","Notify","init","fontSize","timeout","$85a5f86b715fe7db$var$pixabayApi","$g9nP5","PixabayAPI","$85a5f86b715fe7db$var$loadMoreBtn","$dyIeS","Button","$85a5f86b715fe7db$var$searchLoader","$irItn","Loader","$85a5f86b715fe7db$var$loadMoreLoader","$85a5f86b715fe7db$var$lightbox","SimpleLightbox","$85a5f86b715fe7db$var$isNextPage","totalPages","params","page","$85a5f86b715fe7db$var$cardTemplate","card","webformatURL","largeImageURL","likes","views","comments","downloads","tags","$85a5f86b715fe7db$var$renderMarkup","cards","markup","map","join","insertAdjacentHTML","hide","disable","addEventListener","async","evt","preventDefault","searchQuery","target","elements","value","trim","warning","innerHTML","isVisible","q","lastElementChild","disabled","show","data","getCards","total","totalHits","failure","success","Math","ceil","per_page","hits","refresh","enable","error","console","log","height","cardHeight","firstElementChild","getBoundingClientRect","window","scrollBy","top","behavior","$85a5f86b715fe7db$var$scrollCards","$6HtdS","goTopBtnHandler"],"version":3,"file":"index.d5408d19.js.map"}