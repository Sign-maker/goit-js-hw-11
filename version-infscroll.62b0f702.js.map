{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,iEAOA,MAAMC,EAAUC,SAASC,cAAc,gBACjCC,EAAkBF,SAASC,cAAc,kBACzCE,EAAYH,SAASC,cAAc,YACnCG,EAAYJ,SAASC,cAAc,WAEzCI,EAAAR,GAASS,OAAOC,KAAK,CACnBC,SAAU,OACVC,QAAS,IACTC,cAAc,IAGhB,MAAMC,EAAa,IAAI,EAAAC,EAAAC,YACjBC,EAAe,IAAI,EAAAC,EAAAC,QAAOd,EAAiB,MAC3Ce,EAAW,IAAIZ,EAAAa,GAAJ,CAAmB,aAAc,CAAEC,eAAgB,KAEpEL,EAAaM,OAEbrB,EAAQsB,iBAAiB,UAUzBC,eAA4BC,GAC1BA,EAAIC,iBAEJ,MAAMC,EAAcF,EAAIG,OAAOC,SAASF,YAAYG,MAAMC,OAC1D,IAAKJ,EAEH,YADApB,EAAAR,GAASS,OAAOwB,QAAQ,6BAG1BnB,EAAWoB,OAAOC,KAAO,EACzBC,EAASC,UAAU9B,IACnB,EAAA+B,EAAAC,aAAYjC,GACZQ,EAAWoB,OAAS,IAAKpB,EAAWoB,OAAQM,EAAGZ,GAE/C,IACEF,EAAIG,OAAOY,iBAAiBC,UAAW,EACvCzB,EAAa0B,OAEb,MAAMC,QAAa9B,EAAW+B,WACxBC,EAAQF,EAAKG,UAEnB,IAAKD,EAKH,YAJAtC,EAAAR,GAASS,OAAOuC,QACd,4EAMJxC,EAAAR,GAASS,OAAOwC,QACd,oBAAoBH,UAAwB,IAAVA,EAAc,GAAK,QAEvDhC,EAAWoC,WAAaC,KAAKC,KAAKN,EAAQhC,EAAWoB,OAAOmB,WAC5D,EAAAf,EAAAgB,cAAahD,EAAWsC,EAAKW,MAC7BnC,EAASoC,UAEL1C,EAAW2C,cACb3C,EAAWoB,OAAOC,MAAQ,EAC1BC,EAASsB,QAAQnD,IAEjBC,EAAAR,GAASS,OAAOwC,QACd,6D,CAEJ,MAAOU,GACPC,QAAQC,IAAIF,GACZnD,EAAAR,GAASS,OAAOuC,QAAQ,yC,CACzB,QACC/B,EAAaM,OACbG,EAAIG,OAAOY,iBAAiBC,UAAW,C,KAvD3C,MAIMN,EAAW,IAAI0B,sBAuDrB,SAAyBC,EAASC,GAChCD,EAAQE,SAAQxC,MAAMyC,IACpB,GAAKA,EAAMC,eAAX,CAGAP,QAAQC,IAAIK,GACZ,IACE,MAAMtB,QAAa9B,EAAW+B,YAE9B,EAAAP,EAAAgB,cAAahD,EAAWsC,EAAKW,MAC7BnC,EAASoC,UAEL1C,EAAW2C,aACb3C,EAAWoB,OAAOC,MAAQ,GAE1B3B,EAAAR,GAASS,OAAOwC,QACd,8DAEFe,EAAS3B,UAAU9B,G,CAErB,MAAOoD,GACPC,QAAQC,IAAIF,GACZnD,EAAAR,GAASS,OAAOuC,QAAQ,yC,CAnBxB,C,MA9DU,CACdoB,WAAY,QACZC,UAAW,KAIb,EAAAC,EAAAC","sources":["src/js/version-infscroll.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport SimpleLightbox from 'simplelightbox';\nimport { PixabayAPI } from './modules/pixabay-api';\nimport { renderMarkup, clearRender } from './modules/renderHandler';\nimport { Loader } from './modules/loader';\nimport { goTopBtnHandler } from './modules/go-top-btn';\n\nconst formRef = document.querySelector('#search-form');\nconst searchLoaderRef = document.querySelector('.search-loader');\nconst renderRef = document.querySelector('.gallery');\nconst targetRef = document.querySelector('.target');\n\nNotiflix.Notify.init({\n  fontSize: '16px',\n  timeout: 4000,\n  clickToClose: true,\n});\n\nconst pixabayApi = new PixabayAPI();\nconst searchLoader = new Loader(searchLoaderRef, '🔍');\nconst lightbox = new SimpleLightbox('.gallery a', { overlayOpacity: 0.9 });\n\nsearchLoader.hide();\n\nformRef.addEventListener('submit', onFormSubmit);\n\nconst options = {\n  rootMargin: '400px',\n  threshold: 1.0,\n};\nconst observer = new IntersectionObserver(handleIntersect, options);\n\ngoTopBtnHandler();\n\nasync function onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const searchQuery = evt.target.elements.searchQuery.value.trim();\n  if (!searchQuery) {\n    Notiflix.Notify.warning('Plase input search query!');\n    return;\n  }\n  pixabayApi.params.page = 1;\n  observer.unobserve(targetRef);\n  clearRender(renderRef);\n  pixabayApi.params = { ...pixabayApi.params, q: searchQuery };\n\n  try {\n    evt.target.lastElementChild.disabled = true;\n    searchLoader.show();\n\n    const data = await pixabayApi.getCards();\n    const total = data.totalHits;\n\n    if (!total) {\n      Notiflix.Notify.failure(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n\n      return;\n    }\n\n    Notiflix.Notify.success(\n      `Hooray! We found ${total} image${total === 1 ? '' : 's'}.`\n    );\n    pixabayApi.totalPages = Math.ceil(total / pixabayApi.params.per_page);\n    renderMarkup(renderRef, data.hits);\n    lightbox.refresh();\n\n    if (pixabayApi.isNextPage()) {\n      pixabayApi.params.page += 1;\n      observer.observe(targetRef);\n    } else\n      Notiflix.Notify.success(\n        \"We're sorry, but you've reached the end of search results.\"\n      );\n  } catch (error) {\n    console.log(error);\n    Notiflix.Notify.failure('Oops, something went wrong, try again!');\n  } finally {\n    searchLoader.hide();\n    evt.target.lastElementChild.disabled = false;\n  }\n}\n\nfunction handleIntersect(entries, observer) {\n  entries.forEach(async entry => {\n    if (!entry.isIntersecting) {\n      return;\n    }\n    console.log(entry);\n    try {\n      const data = await pixabayApi.getCards();\n\n      renderMarkup(renderRef, data.hits);\n      lightbox.refresh();\n\n      if (pixabayApi.isNextPage()) {\n        pixabayApi.params.page += 1;\n      } else {\n        Notiflix.Notify.success(\n          \"We're sorry, but you've reached the end of search results.\"\n        );\n        observer.unobserve(targetRef);\n      }\n    } catch (error) {\n      console.log(error);\n      Notiflix.Notify.failure('Oops, something went wrong, try again!');\n    }\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$fa28b284c05e71dc$var$formRef","document","querySelector","$fa28b284c05e71dc$var$searchLoaderRef","$fa28b284c05e71dc$var$renderRef","$fa28b284c05e71dc$var$targetRef","$parcel$interopDefault","Notify","init","fontSize","timeout","clickToClose","$fa28b284c05e71dc$var$pixabayApi","$g9nP5","PixabayAPI","$fa28b284c05e71dc$var$searchLoader","$irItn","Loader","$fa28b284c05e71dc$var$lightbox","$fZKcF","overlayOpacity","hide","addEventListener","async","evt","preventDefault","searchQuery","target","elements","value","trim","warning","params","page","$fa28b284c05e71dc$var$observer","unobserve","$im6YL","clearRender","q","lastElementChild","disabled","show","data","getCards","total","totalHits","failure","success","totalPages","Math","ceil","per_page","renderMarkup","hits","refresh","isNextPage","observe","error","console","log","IntersectionObserver","entries","observer1","forEach","entry","isIntersecting","rootMargin","threshold","$6HtdS","goTopBtnHandler"],"version":3,"file":"version-infscroll.62b0f702.js.map"}